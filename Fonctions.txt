#####Liste et descriptions des fonctions git choisies par le groupe#####

Les commandes merge, fetch, pull, push prennent facultativement en argument le dépôt distant (ex: origin) et la branche distante (ex: master).

git commit: La commande "git commit" est une des commandes principales de l'outil git, elle permet de stocker le contenu de l'index et de "valider" les changements apportés aux fichiers présents dans le dépot. Habituellement, lors de
l'exécution de la commande, l'utilisateur utilise l'option "-m 'Mon texte'" afin de décrire les modifications apportés par cette nouvelle version des fichiers. 

git merge: Cette comamnde permet de fusionner deux branches. Cette commande va fusionner les commits des deux branches depuis leur séparation, le résultat de cette commande est qu'il ne restera plus qu'une branche, intégrant les
modifications apportées par les deux branches. L'option "-m 'Mon texte'" permet de préciser le message du commit qui sera effectué lors de la fusion des deux branches.

git cherry-pick: Cette commande permet d'appliquer les modifications d'un commit particulier d'une autre branche à la branche actuelle. Par exemple, si un correctif a été développé sur une autre branche, et qu'il devient nécessaire
de le déployer sur la branche principale, il est possible, grâce à "cherry-pick", de ne récupérer que les modifications apportées par le commit qui nous intéresse.

git fetch : Mise à jour des références locales des branches distantes ainsi que des objets git (commit principalement). Dit autrement, elle permet au dépôt local, de prendre simplement conscience des modifications distantes. Elles ne sont pas appliquées aux branches locales. Cette commande est sûre.
[git_fetch.png]

git pull : Exécution d'un "git fetch" puis d'un "git merge". Bien qu'elle soit pratique, quand la branche locale n'est pas derrière la branche distante, des fusions (avec commits parfois) sont effectués sans pouvoir annuler. Ce qui pose un soucis, pour la lisibilité de l'historique d'un dépôt. Il est d'usage d'utiliser plutôt "git pull --rebase" afin de remplacer l'opération de merging en une opération de rebasing. Il existe plusieurs façons par "git config" de spécifier ce comportement par défaut.
[git_pull.png]

git push : Mise à jour des références du dépôt distant ainsi que des objets git (commit principalement). Dit autrement, elle permet au dépôt distant, d'appliquer les modifications locales. Il pourrait s'agir d'un git pull côté distant, sauf que c'est un autre dépôt qui est à l'initiative. Même si c'est rarement une bonne idée, on peut forcer le push si les branches locales et distantes ne sont pas cohérentes avec l'option "-f"
[git_push.png]

#####Fin des descriptions#####